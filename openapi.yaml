openapi: 3.0.3
info:
  title: ONYX API
  description: RESTful API for managing buildings, assessments, users, and related data.
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, role]
              properties:
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
      responses:
        '201':
          description: User registered
        '400':
          description: Validation error
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
        '400':
          description: Validation error
  /users/me:
    get:
      summary: Get current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user info
        '401':
          description: Unauthorized
  /users:
    get:
      summary: List all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /users/{id}:
    get:
      summary: Get user by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User info
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      summary: Delete user by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /buildings:
    post:
      summary: Create a building
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Building'
      responses:
        '201':
          description: Building created
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    get:
      summary: List all buildings
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of buildings
        '401':
          description: Unauthorized
  /buildings/{id}:
    get:
      summary: Get building by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Building info
        '401':
          description: Unauthorized
    patch:
      summary: Update building
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Building'
      responses:
        '200':
          description: Building updated
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      summary: Delete building
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Building deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /building-types:
    get:
      summary: List all building types
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of building types
        '401':
          description: Unauthorized
  /building-types/{type}:
    get:
      summary: Get building type by key
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Building type info
        '401':
          description: Unauthorized
  /audit-logs:
    get:
      summary: List all audit logs
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of audit logs
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /audit-logs/{id}:
    get:
      summary: Get audit log by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Audit log info
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /field-assessments:
    post:
      summary: Create field assessment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldAssessment'
      responses:
        '201':
          description: Field assessment created
        '400':
          description: Validation error
        '401':
          description: Unauthorized
    get:
      summary: List all field assessments
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of field assessments
        '401':
          description: Unauthorized
  /field-assessments/{id}:
    get:
      summary: Get field assessment by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Field assessment info
        '401':
          description: Unauthorized
  /field-assessments/building/{building_id}:
    get:
      summary: Get field assessments for a building
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: building_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of field assessments for building
        '401':
          description: Unauthorized
  /field-assessments/{id}/items:
    post:
      summary: Add items to a field assessment
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Items added
        '401':
          description: Unauthorized
    get:
      summary: Get items for a field assessment
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of items
        '401':
          description: Unauthorized
  /field-assessments/{id}/items/costs:
    patch:
      summary: Update repair costs for assessment items
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Costs updated
        '401':
          description: Unauthorized
  /pre-assessments:
    post:
      summary: Create pre-assessment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreAssessment'
      responses:
        '201':
          description: Pre-assessment created
        '400':
          description: Validation error
        '401':
          description: Unauthorized
    get:
      summary: List all pre-assessments
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of pre-assessments
        '401':
          description: Unauthorized
  /pre-assessments/{id}:
    get:
      summary: Get pre-assessment by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Pre-assessment info
        '401':
          description: Unauthorized
  /pre-assessments/building/{building_id}:
    get:
      summary: Get pre-assessments for a building
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: building_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of pre-assessments for building
        '401':
          description: Unauthorized
  /pre-assessments/{id}/items:
    post:
      summary: Add items to a pre-assessment
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Items added
        '401':
          description: Unauthorized
    get:
      summary: Get items for a pre-assessment
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of items
        '401':
          description: Unauthorized
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Building:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        type:
          type: string
    FieldAssessment:
      type: object
      properties:
        buildingId:
          type: string
        assessor:
          type: string
        date:
          type: string
          format: date
    PreAssessment:
      type: object
      properties:
        buildingId:
          type: string
        assessor:
          type: string
        date:
          type: string
          format: date
